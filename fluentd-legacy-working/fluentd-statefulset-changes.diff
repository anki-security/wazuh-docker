diff --git a/roles/wazuh/tasks/resources/fluentd-statefulset.yml b/roles/wazuh/tasks/resources/fluentd-statefulset.yml
index ff7757b..2958900 100644
--- a/roles/wazuh/tasks/resources/fluentd-statefulset.yml
+++ b/roles/wazuh/tasks/resources/fluentd-statefulset.yml
@@ -23,9 +23,65 @@
         selector:
           app: fluentd
         ports:
-        - name: mikrotik-syslog
-          port: 30514
-          targetPort: 30514
+        - name: netflow
+          port: 2055
+          targetPort: 2055
+          protocol: UDP
+        - name: sflow
+          port: 6343
+          targetPort: 6343
+          protocol: UDP
+        - name: mikrotik
+          port: 40514
+          targetPort: 40514
+          protocol: UDP
+        - name: fortigate-cef
+          port: 40515
+          targetPort: 40515
+          protocol: TCP
+        - name: fortigate-syslog
+          port: 40516
+          targetPort: 40516
+          protocol: UDP
+        - name: cisco-asa
+          port: 40517
+          targetPort: 40517
+          protocol: UDP
+        - name: palo-alto
+          port: 40518
+          targetPort: 40518
+          protocol: TCP
+        - name: syslog-udp
+          port: 40519
+          targetPort: 40519
+          protocol: UDP
+        - name: syslog-tcp
+          port: 40520
+          targetPort: 40520
+          protocol: TCP
+        - name: cef-tcp
+          port: 40521
+          targetPort: 40521
+          protocol: TCP
+        - name: cef-udp
+          port: 40522
+          targetPort: 40522
+          protocol: UDP
+        - name: ruckus-udp
+          port: 40523
+          targetPort: 40523
+          protocol: UDP
+        - name: ruckus-tcp
+          port: 40524
+          targetPort: 40524
+          protocol: TCP
+        - name: checkpoint-cef
+          port: 40525
+          targetPort: 40525
+          protocol: TCP
+        - name: checkpoint-syslog
+          port: 40526
+          targetPort: 40526
           protocol: UDP
 
 # NodePort service removed - using hostPort in StatefulSet instead
@@ -57,113 +113,113 @@
               app: fluentd
               client: "{{ ansible_k8s_namespace }}"
           spec:
-            # Use host network to bind directly to node's port 30154
+            # Use host network to bind directly to node's ports
             hostNetwork: true
             dnsPolicy: ClusterFirstWithHostNet
             
             nodeSelector:
               wazuh-client-id: "{{ ansible_k8s_namespace }}"
             
-            # Init container to set up ingest pipelines
-            initContainers:
-            - name: setup-pipelines
-              image: curlimages/curl:latest
-              command: ["/bin/sh"]
-              args:
-                - -c
-                - |
-                  echo "üîß Setting up Elasticsearch ingest pipelines..."
-                  
-                  # Wait for indexer to be ready
-                  until curl -k -u "${ELASTICSEARCH_USERNAME}:${ELASTICSEARCH_PASSWORD}" \
-                    "https://wazuh-indexer.{{ ansible_k8s_namespace }}.svc.cluster.local:9200/_cluster/health?wait_for_status=yellow&timeout=60s" \
-                    > /dev/null 2>&1; do
-                    echo "‚è≥ Waiting for Elasticsearch to be ready..."
-                    sleep 5
-                  done
-                  
-                  echo "‚úÖ Elasticsearch is ready!"
-                  
-                  # Create MikroTik ingest pipeline if it doesn't exist
-                  if [ -f "/pipelines/mikrotik-pipeline.json" ]; then
-                    echo "üìã Creating MikroTik ingest pipeline..."
-                    curl -k -X PUT \
-                      -u "${ELASTICSEARCH_USERNAME}:${ELASTICSEARCH_PASSWORD}" \
-                      -H "Content-Type: application/json" \
-                      "https://wazuh-indexer.{{ ansible_k8s_namespace }}.svc.cluster.local:9200/_ingest/pipeline/mikrotik-routeros" \
-                      -d @/pipelines/mikrotik-pipeline.json
-                  fi
-                  
-                  echo "‚úÖ Pipeline setup completed!"
-              env:
-              - name: ELASTICSEARCH_USERNAME
-                valueFrom:
-                  secretKeyRef:
-                    name: indexer-cred
-                    key: INDEXER_USERNAME
-              - name: ELASTICSEARCH_PASSWORD
-                valueFrom:
-                  secretKeyRef:
-                    name: indexer-cred
-                    key: INDEXER_PASSWORD
-              volumeMounts:
-              - name: pipelines
-                mountPath: /pipelines
-                readOnly: true
+            tolerations:
+            - key: "node.kubernetes.io/disk-pressure"
+              operator: "Exists"
+              effect: "NoSchedule"
+            
+            imagePullSecrets:
+            - name: "{{ image_pull_secret_name }}"
             
             volumes:
-            - name: fluentd-config
-              configMap:
-                name: fluentd-config
-            - name: pipelines
-              configMap:
-                name: filebeat-pipelines
             - name: fluentd-buffer
               emptyDir: {}
             
             containers:
             - name: fluentd
-              image: fluent/fluentd-kubernetes-daemonset:v1.17-debian-opensearch-1
+              image: "ghcr.io/anki-security/wazuh-fluentd:latest"
+              imagePullPolicy: Always
               resources:
                 requests:
-                  cpu: "{{ filebeat_cpu_request | default('100m') }}"
-                  memory: "{{ filebeat_memory_request | default('256Mi') }}"
+                  cpu: "{{ fluentd_cpu_request | default('100m') }}"
+                  memory: "{{ fluentd_memory_request | default('256Mi') }}"
                 limits:
-                  cpu: "{{ filebeat_cpu_limit | default('500m') }}"
-                  memory: "{{ filebeat_memory_limit | default('512Mi') }}"
+                  cpu: "{{ fluentd_cpu_limit | default('500m') }}"
+                  memory: "{{ fluentd_memory_limit | default('512Mi') }}"
               securityContext:
                 runAsUser: 0
                 capabilities:
                   add:
                   - NET_BIND_SERVICE
               volumeMounts:
-              - name: fluentd-config
-                mountPath: /fluentd/etc/fluent.conf
-                subPath: fluent.conf
-                readOnly: true
               - name: fluentd-buffer
                 mountPath: /fluentd/buffer
               - name: fluentd-data
                 mountPath: /fluentd/log
               ports:
-              - containerPort: 30514
+              - containerPort: 2055
+                name: netflow
+                protocol: UDP
+              - containerPort: 6343
+                name: sflow
+                protocol: UDP
+              - containerPort: 40514
+                name: mikrotik
+                protocol: UDP
+              - containerPort: 40515
+                name: forti-cef
+                protocol: TCP
+              - containerPort: 40516
+                name: forti-syslog
+                protocol: UDP
+              - containerPort: 40517
+                name: cisco-asa
+                protocol: UDP
+              - containerPort: 40518
+                name: palo-alto
+                protocol: TCP
+              - containerPort: 40519
                 name: syslog-udp
                 protocol: UDP
+              - containerPort: 40520
+                name: syslog-tcp
+                protocol: TCP
+              - containerPort: 40521
+                name: cef-tcp
+                protocol: TCP
+              - containerPort: 40522
+                name: cef-udp
+                protocol: UDP
+              - containerPort: 40523
+                name: ruckus-udp
+                protocol: UDP
+              - containerPort: 40524
+                name: ruckus-tcp
+                protocol: TCP
+              - containerPort: 40525
+                name: chkpoint-cef
+                protocol: TCP
+              - containerPort: 40526
+                name: chkpoint-syslog
+                protocol: UDP
               env:
               - name: TZ
                 value: "{{ client_timezone | default(default_timezone) | default('UTC') }}"
-              - name: ELASTICSEARCH_HOST
-                value: "wazuh-indexer.{{ ansible_k8s_namespace }}.svc.cluster.local:9200"
-              - name: ELASTICSEARCH_USERNAME
+              - name: INDEXER_HOST
+                value: "wazuh-indexer.{{ ansible_k8s_namespace }}.svc.cluster.local"
+              - name: INDEXER_PORT
+                value: "9200"
+              - name: INDEXER_USERNAME
                 valueFrom:
                   secretKeyRef:
                     name: indexer-cred
                     key: INDEXER_USERNAME
-              - name: ELASTICSEARCH_PASSWORD
+              - name: INDEXER_PASSWORD
                 valueFrom:
                   secretKeyRef:
                     name: indexer-cred
                     key: INDEXER_PASSWORD
+              - name: SETUP_PIPELINES
+                value: "true"
+              - name: FLUENTD_LOG_LEVEL
+                value: "{{ fluentd_log_level | default('info') }}"
               - name: NODE_NAME
                 valueFrom:
                   fieldRef:
@@ -184,7 +240,7 @@
           spec:
             accessModes:
             - ReadWriteOnce
-            storageClassName: "{{ filebeat_storage_class | default('local-path') }}"
+            storageClassName: "{{ fluentd_storage_class | default('local-path') }}"
             resources:
               requests:
-                storage: "{{ filebeat_storage_size | default('2Gi') }}"
+                storage: "{{ fluentd_storage_size | default('2Gi') }}"
