# Kubernetes/K3s Example for Wazuh Fluentd
# Production-ready syslog and NetFlow collector
# 
# Usage:
#   kubectl apply -f k8s-example.yml
#
# Features:
# - StatefulSet with persistent storage
# - hostNetwork for direct port access
# - Auto-setup of OpenSearch pipelines
# - Resource limits optimized for Fluentd

---
apiVersion: v1
kind: Namespace
metadata:
  name: wazuh-fluentd
  labels:
    app: wazuh-fluentd

---
apiVersion: v1
kind: Secret
metadata:
  name: indexer-credentials
  namespace: wazuh-fluentd
type: Opaque
stringData:
  INDEXER_USERNAME: "admin"
  INDEXER_PASSWORD: "SecretPassword"  # Change this!

---
apiVersion: v1
kind: Service
metadata:
  name: wazuh-fluentd
  namespace: wazuh-fluentd
  labels:
    app: wazuh-fluentd
spec:
  type: ClusterIP
  clusterIP: None  # Headless service
  selector:
    app: wazuh-fluentd
  ports:
    - name: netflow
      port: 2055
      protocol: UDP
    - name: mikrotik
      port: 40514
      protocol: UDP
    - name: syslog-udp
      port: 40519
      protocol: UDP
    - name: syslog-tcp
      port: 40520
      protocol: TCP

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: wazuh-fluentd
  namespace: wazuh-fluentd
  labels:
    app: wazuh-fluentd
spec:
  serviceName: wazuh-fluentd
  replicas: 1
  selector:
    matchLabels:
      app: wazuh-fluentd
  template:
    metadata:
      labels:
        app: wazuh-fluentd
    spec:
      # Use host network for direct port access (recommended for syslog/netflow)
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      
      # Image pull secret for ghcr.io (if needed)
      imagePullSecrets:
      - name: ghcr-credentials
      
      # Optional: Schedule on specific nodes
      # nodeSelector:
      #   wazuh-client-id: "client1"
      
      containers:
      - name: fluentd
        image: ghcr.io/anki-security/wazuh-fluentd:latest
        imagePullPolicy: Always
        
        ports:
        - containerPort: 2055
          protocol: UDP
          name: netflow
        - containerPort: 40514
          protocol: UDP
          name: mikrotik
        - containerPort: 40519
          protocol: UDP
          name: syslog-udp
        - containerPort: 40520
          protocol: TCP
          name: syslog-tcp
        
        env:
        # Indexer connection
        - name: INDEXER_HOST
          value: "wazuh-indexer.wazuh.svc.cluster.local"  # Adjust namespace
        - name: INDEXER_PORT
          value: "9200"
        - name: INDEXER_USERNAME
          valueFrom:
            secretKeyRef:
              name: indexer-credentials
              key: INDEXER_USERNAME
        - name: INDEXER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: indexer-credentials
              key: INDEXER_PASSWORD
        
        # Pipeline setup
        - name: SETUP_PIPELINES
          value: "true"
        
        # Fluentd configuration
        - name: FLUENTD_LOG_LEVEL
          value: "info"
        
        # Timezone
        - name: TZ
          value: "UTC"
        
        volumeMounts:
        - name: fluentd-buffer
          mountPath: /fluentd/buffer
        - name: fluentd-log
          mountPath: /fluentd/log
        
        resources:
          requests:
            cpu: 250m
            memory: 256Mi
          limits:
            cpu: 1000m
            memory: 512Mi
        
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - pgrep -f fluentd
          initialDelaySeconds: 30
          periodSeconds: 30
        
        readinessProbe:
          tcpSocket:
            port: 40520
          initialDelaySeconds: 10
          periodSeconds: 10
  
  volumeClaimTemplates:
  - metadata:
      name: fluentd-buffer
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: local-path  # Adjust for your cluster
      resources:
        requests:
          storage: 2Gi
  - metadata:
      name: fluentd-log
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: local-path
      resources:
        requests:
          storage: 1Gi

---
# Optional: NetworkPolicy for security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: wazuh-fluentd-policy
  namespace: wazuh-fluentd
spec:
  podSelector:
    matchLabels:
      app: wazuh-fluentd
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow syslog/netflow from anywhere (adjust as needed)
  - from:
    - podSelector: {}
    ports:
    - protocol: UDP
      port: 2055
    - protocol: UDP
      port: 40514
    - protocol: UDP
      port: 40519
    - protocol: TCP
      port: 40520
  egress:
  # Allow connection to Wazuh Indexer
  - to:
    - namespaceSelector:
        matchLabels:
          name: wazuh
    ports:
    - protocol: TCP
      port: 9200
  # Allow DNS
  - to:
    - namespaceSelector: {}
    ports:
    - protocol: UDP
      port: 53
