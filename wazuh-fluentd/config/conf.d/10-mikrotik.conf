###################### MikroTik Configuration ######################
# Port: 30514 UDP
# Flow: 
#   - ALL logs â†’ Wazuh Manager (rules) + Indexer (anki-mikrotik-*)
#   - Filebeat filters out sensor logs from archives
#   - Agent logs preserved in wazuh-archives-*

<source>
  @type udp
  port 30514
  bind 0.0.0.0
  tag mikrotik.syslog
  source_address_key source_ip
  <parse>
    @type none
  </parse>
</source>

# Add metadata and enrich
<filter mikrotik.**>
  @type record_transformer
  enable_ruby true
  <record>
    log_source mikrotik
    vendor mikrotik
    product routeros
    data_source anki-sensor           # Tag for Filebeat filtering
    hostname ${record["source_ip"] || "unknown"}
    "@timestamp" ${time.strftime('%Y-%m-%dT%H:%M:%S.%LZ')}
    full_message ${record["message"]}
    observer { "product": "RouterOS", "vendor": "MikroTik", "type": "firewall" }
  </record>
</filter>

# Parse specific event types
<filter mikrotik.**>
  @type parser
  key_name message
  reserve_data true
  inject_key_prefix parsed.
  <parse>
    @type multi_format
    
    # Login failure
    <pattern>
      format regexp
      expression /login failure for user (?<user>\S+) from (?<src_ip>\S+) via (?<protocol>\S+)/
    </pattern>
    
    # User logged in
    <pattern>
      format regexp
      expression /user (?<user>\S+) logged in from (?<src_ip>\S+) via (?<protocol>\S+)/
    </pattern>
    
    # User logged out
    <pattern>
      format regexp
      expression /user (?<user>\S+) logged out/
    </pattern>
    
    # User added (with details)
    <pattern>
      format regexp
      expression /user (?<target_user>\S+) added by (?<method>[^:]+):(?<admin_user>\S+)@(?<admin_mac>[\w:]+)/
    </pattern>
    
    # User changed (with details)
    <pattern>
      format regexp
      expression /user (?<target_user>\S+) changed by (?<method>[^:]+):(?<admin_user>\S+)@(?<admin_mac>[\w:]+)/
    </pattern>
    
    # User removed (with details)
    <pattern>
      format regexp
      expression /user (?<target_user>\S+) removed by (?<method>[^:]+):(?<admin_user>\S+)@(?<admin_mac>[\w:]+)/
    </pattern>
    
    # User management (simple)
    <pattern>
      format regexp
      expression /user (?<user>\S+) (?<action>added|removed|changed)/
    </pattern>
    
    # Password changes
    <pattern>
      format regexp
      expression /password changed for user (?<user>\S+)/
    </pattern>
    
    # Extract group changes
    <pattern>
      format regexp
      expression /group=(?<user_group>full|write|read)/
    </pattern>
    
    # Extract disabled status
    <pattern>
      format regexp
      expression /disabled=(?<disabled>yes|no)/
    </pattern>
    
    # Firewall rules
    <pattern>
      format regexp
      expression /(?<rule_type>filter|nat|mangle|raw) rule (?<action>added|removed|changed)/
    </pattern>
  </parse>
</filter>

# Send ALL logs to BOTH Wazuh Manager and Indexer
<match mikrotik.**>
  @type copy
  
  # To Wazuh Manager for rule processing
  <store>
    @type tcp
    
    host "#{ENV['WAZUH_MANAGER_HOST'] || 'wazuh-manager'}"
    port "#{ENV['WAZUH_MANAGER_PORT'] || '1533'}"
    
    <format>
      @type json
    </format>
    
    <inject>
      newline "\n"
    </inject>
  </store>
  
  # To Indexer for device-specific index
  <store>
    @type opensearch
    
    host "#{ENV['INDEXER_HOST'] || 'wazuh-indexer'}"
    port "#{ENV['INDEXER_PORT'] || '9200'}"
    scheme https
    ssl_verify false
    ssl_version TLSv1_2
    
    user "#{ENV['INDEXER_USERNAME']}"
    password "#{ENV['INDEXER_PASSWORD']}"
    
    index_name anki-mikrotik-%Y.%m.%d
    type_name _doc
    
    <buffer tag, time>
      @type file
      path /fluentd/buffer/mikrotik-indexer
      timekey 60s
      timekey_wait 10s
      flush_mode interval
      flush_interval 10s
      retry_type exponential_backoff
      retry_wait 2s
      retry_max_interval 300s
      retry_timeout 24h
      chunk_limit_size 8MB
      total_limit_size 1GB
      overflow_action drop_oldest_chunk
      compress gzip
    </buffer>
    
    <secondary>
      @type file
      path /fluentd/failed_records/mikrotik-indexer
    </secondary>
  </store>
</match>
