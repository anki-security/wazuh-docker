version: "3.8"

# Example Docker Compose configuration for Wazuh Vector
# High-performance data pipeline for syslog and NetFlow collection
# This can be used standalone or integrated with your Wazuh stack

services:
  wazuh-vector:
    image: ghcr.io/anki-security/wazuh-vector:latest
    container_name: wazuh-vector
    hostname: wazuh-vector
    restart: unless-stopped

    # Expose active ports (optimized for essential sources)
    ports:
      - "2055:2055/udp"     # NetFlow v5/v9
      - "40514:40514/udp"   # MikroTik RouterOS
      - "40519:40519/udp"   # Generic Syslog (UDP)
      - "40520:40520/tcp"   # Generic Syslog (TCP)

    environment:
      # Required: Wazuh Indexer/OpenSearch connection
      - INDEXER_HOST=wazuh-indexer
      - INDEXER_PORT=9200
      - INDEXER_USERNAME=admin
      - INDEXER_PASSWORD=SecretPassword # Change this!

      # Optional: Pipeline setup
      - SETUP_PIPELINES=true # Auto-create OpenSearch pipelines on startup

    volumes:
      # Persistent buffer storage (recommended)
      - vector-data:/vector/data

      # Optional: Custom Vector configuration
      # - ./custom-vector.toml:/vector/config/vector.toml:ro
      # - ./custom-pipelines:/vector/pipelines:ro

    networks:
      - wazuh

    # Optional: Resource limits (Vector uses much less than Fluentd!)
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 256M  # Vector typically uses ~50MB
        reservations:
          cpus: "0.25"
          memory: 128M

volumes:
  vector-data:
    driver: local

networks:
  wazuh:
    # If using with existing Wazuh stack, use:
    # external: true
    driver: bridge
