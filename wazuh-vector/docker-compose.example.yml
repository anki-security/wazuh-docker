version: "3.8"

# Example Docker Compose configuration for Wazuh Fluentd
# This can be used standalone or integrated with your Wazuh stack

services:
  wazuh-fluentd:
    image: wazuh/wazuh-fluentd:4.13.1
    container_name: wazuh-fluentd
    hostname: wazuh-fluentd
    restart: unless-stopped

    # Expose all syslog ports
    ports:
      - "30514:30514/udp" # MikroTik RouterOS
      - "30515:30515/tcp" # Fortigate CEF
      - "30516:30516/udp" # Fortigate Syslog
      - "30517:30517/udp" # Cisco ASA
      - "30518:30518/tcp" # Palo Alto PAN-OS
      - "30519:30519/udp" # Generic Syslog
      - "30520:30520/tcp" # Generic Syslog
      - "30521:30521/tcp" # Generic CEF
      - "30522:30522/udp" # Generic CEF
      - "30523:30523/udp" # Ruckus Wireless
      - "30524:30524/tcp" # Ruckus Wireless
      - "30525:30525/tcp" # Check Point CEF
      - "30526:30526/udp" # Check Point Syslog

    environment:
      # Required: Wazuh Indexer connection
      - INDEXER_HOST=wazuh-indexer
      - INDEXER_PORT=9200
      - INDEXER_USERNAME=admin
      - INDEXER_PASSWORD=SecretPassword # Change this!

      # Optional: Pipeline setup
      - SETUP_PIPELINES=true # Auto-create pipelines on startup

      # Optional: Fluentd configuration
      - FLUENTD_LOG_LEVEL=info # debug, info, warn, error
      - FLUENTD_WORKERS=1 # Increase for high-volume

    volumes:
      # Persistent buffer storage (recommended)
      - fluentd-buffer:/fluentd/buffer
      - fluentd-logs:/fluentd/log

      # Optional: Custom configurations
      # - ./custom-conf.d:/fluentd/etc/conf.d:ro
      # - ./custom-pipelines:/fluentd/pipelines:ro

    networks:
      - wazuh

    # Optional: Resource limits
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 512M
        reservations:
          cpus: "0.5"
          memory: 256M

volumes:
  fluentd-buffer:
    driver: local
  fluentd-logs:
    driver: local

networks:
  wazuh:
    # If using with existing Wazuh stack, use:
    # external: true
    driver: bridge
