name: Build and Push Wazuh Vector

on:
  workflow_dispatch:
    inputs:
      bump_type:
        description: "Version bump type"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/wazuh-vector

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Read current version
        id: current_version
        run: |
          cd wazuh-vector
          CURRENT_VERSION=$(cat VERSION)
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $CURRENT_VERSION"
          
      - name: Bump version
        id: bump_version
        run: |
          cd wazuh-vector
          CURRENT_VERSION="${{ steps.current_version.outputs.version }}"
          IFS='.' read -r major minor patch <<< "$CURRENT_VERSION"
          
          case "${{ github.event.inputs.bump_type }}" in
            major)
              major=$((major + 1))
              minor=0
              patch=0
              ;;
            minor)
              minor=$((minor + 1))
              patch=0
              ;;
            patch)
              patch=$((patch + 1))
              ;;
          esac
          
          NEW_VERSION="${major}.${minor}.${patch}"
          echo "$NEW_VERSION" > VERSION
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "Bumped version: $CURRENT_VERSION -> $NEW_VERSION"
          
      - name: Update CHANGELOG
        run: |
          cd wazuh-vector
          NEW_VERSION="${{ steps.bump_version.outputs.new_version }}"
          DATE=$(date +%Y-%m-%d)
          
          # Create new changelog entry
          cat > CHANGELOG.tmp << 'EOF'
          # Changelog
          
          EOF
          echo "## [$NEW_VERSION] - $DATE" >> CHANGELOG.tmp
          echo "" >> CHANGELOG.tmp
          echo "### Changed" >> CHANGELOG.tmp
          echo "- Version bump to $NEW_VERSION" >> CHANGELOG.tmp
          echo "" >> CHANGELOG.tmp
          tail -n +2 CHANGELOG.md >> CHANGELOG.tmp
          mv CHANGELOG.tmp CHANGELOG.md

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ steps.bump_version.outputs.new_version }}
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./wazuh-vector
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          # Speed optimizations
          provenance: false
          sbom: false

      - name: Commit version bump
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add wazuh-vector/VERSION wazuh-vector/CHANGELOG.md
          git commit -m "chore(wazuh-vector): bump version to ${{ steps.bump_version.outputs.new_version }}"
          git tag -a "wazuh-vector-v${{ steps.bump_version.outputs.new_version }}" -m "Release wazuh-vector v${{ steps.bump_version.outputs.new_version }}"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          tags: true
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: wazuh-vector-v${{ steps.bump_version.outputs.new_version }}
          name: Wazuh Vector v${{ steps.bump_version.outputs.new_version }}
          body: |
            ## Wazuh Vector v${{ steps.bump_version.outputs.new_version }}
            
            **Powered by Vector.dev** - High-performance data pipeline built in Rust
            
            ### Docker Images
            ```bash
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.bump_version.outputs.new_version }}
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ```
            
            ### Active Sources (4 ports)
            - âœ… NetFlow v5/v9 (2055/UDP) - Native Vector support
            - âœ… MikroTik RouterOS (40514/UDP)
            - âœ… Generic Syslog (40519/UDP, 40520/TCP)
            
            ### Features
            - ðŸš€ 10x faster than Fluentd (Rust vs Ruby)
            - ðŸ’¾ 10x lower memory usage (~50MB)
            - âœ… Native NetFlow support (actually works!)
            - ðŸ”’ TLS/SSL to OpenSearch
            - ðŸ“Š OpenSearch pipeline support
            - ðŸ’¿ Disk-based buffering (512MB per sink)
            
            ### Changes
            See [wazuh-vector/CHANGELOG.md](wazuh-vector/CHANGELOG.md) for details.
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
